Object KullHunter
	; ***ART Parameters ***

	SelectPortrait         = up_uuhunter
	ButtonImage = ub_uuhunter

	Draw = W3DHordeModelDraw ModuleTag_01

	  OkToChangeModelColor = Yes
	  
    StaticModelLODMode = yes ; Will append M or L to the skin name depending on GameLOD
    LodOptions						= LOW
		AllowMultipleModels			= BFA_ALLOW_MULTIPLE_MODELS_LOW
		MaxRandomTextures			= BFA_MAX_RANDOM_TEXTURES_LOW
		MaxRandomAnimations			= BFA_MAX_RANDOM_ANIMATIONS_LOW
		MaxAnimFrameDelta			= BFA_MAX_ANIM_FRAME_DELTA_LOW
	End
	
	LodOptions					= MEDIUM
		AllowMultipleModels			= BFA_ALLOW_MULTIPLE_MODELS_MED
		MaxRandomTextures			= BFA_MAX_RANDOM_TEXTURES_MED
		MaxRandomAnimations			= BFA_MAX_RANDOM_ANIMATIONS_MED
		MaxAnimFrameDelta			= BFA_MAX_ANIM_FRAME_DELTA_MED
	End
	
	LodOptions					= HIGH
		AllowMultipleModels			= BFA_ALLOW_MULTIPLE_MODELS_HIGH
		MaxRandomTextures			= BFA_MAX_RANDOM_TEXTURES_HIGH
		MaxRandomAnimations			= BFA_MAX_RANDOM_ANIMATIONS_HIGH
		MaxAnimFrameDelta			= BFA_MAX_ANIM_FRAME_DELTA_HIGH
	End
    
		
		; Sword version
		DefaultModelConditionState
			Model							= uuhunter_SKN
			Skeleton						= EUHaldir_SKL
			WeaponLaunchBone				= PRIMARY ARROW
		End

		; Bow version
		ModelConditionState					= WEAPONSET_TOGGLE_1
			Model							= uuhunter_SKN
			Skeleton						= EUHaldir_SKL
		End


		AnimationState						= PASSENGER WEAPONSET_TOGGLE_1
			StateName						= STATE_Grabbed
			Animation						= Bow
				AnimationName				= EUHaldir_FLYA
				AnimationMode				= LOOP
			End
		End
		AnimationState						= PASSENGER
			StateName						= STATE_Grabbed
			Animation						= Sword
				AnimationName				= EUHaldir_FLYB
				AnimationMode				= LOOP
			End
		End


		AnimationState						= FREEFALL WEAPONSET_TOGGLE_1
			StateName						= STATE_Falling
			Animation						= Bow
				AnimationName				= EUHaldir_FLYA
				AnimationMode				= LOOP
				AnimationBlendTime			= 10
				AnimationSpeedFactorRange	= 0.5	0.5
			End
		End
		AnimationState						= FREEFALL
			StateName						= STATE_Falling
			Animation						= Sword
				AnimationName				= EUHaldir_FLYB
				AnimationMode				= LOOP
				AnimationBlendTime			= 10
				AnimationSpeedFactorRange	= 0.24 0.24
			End
		End


		AnimationState						= STUNNED_FLAILING WEAPONSET_TOGGLE_1
			StateName						= STATE_Fly
			Animation
				AnimationName				= EUHaldir_FLYA
				AnimationMode				= LOOP
				AnimationSpeedFactorRange	= 0.4 0.6
			End
			Flags							= MAINTAIN_FRAME_ACROSS_STATES2
		End
		AnimationState						= STUNNED_FLAILING
			StateName						= STATE_Fly
			Animation						= Sword
				AnimationName				= EUHaldir_FLYB
				AnimationMode				= LOOP
				AnimationSpeedFactorRange	= 0.4 0.6
			End
			Flags							= MAINTAIN_FRAME_ACROSS_STATES2
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "Ready_Bow" or PrevState == "Moving_Bow" or PrevState == "Bored_Bow"
				then
					CurDrawableShowSubObject("arrow")
					CurDrawableShowSubObject("arrownock")
					return "WantSword"
				elseif PrevState == "STATE_Fly"
				then
					if PrevAnim == "Bow" or PrevAnim == "WantSword"
					then
						CurDrawableShowSubObject("arrow")
						CurDrawableShowSubObject("arrownock")
						return "WantSword"
					end
				end
				CurDrawableHideSubObject("ArrowNock")
				CurDrawableHideSubObject("arrow")
				return "Sword"
			EndScript
		End


		AnimationState						= DYING DEATH_1 SPLATTED WEAPONSET_TOGGLE_1
			StateName						= STATE_Dead
			Animation						= Bow
				AnimationName				= EUHaldir_LNDA
				AnimationMode				= ONCE
			End
		End
		AnimationState						= DYING DEATH_1 SPLATTED
			StateName						= STATE_Dead
			Animation						= Sword
				AnimationName				= EUHaldir_LNDB
				AnimationMode				= ONCE
			End
		End


		AnimationState						= DYING DEATH_1 WEAPONSET_TOGGLE_1
			Animation						= Bow1
				AnimationName				= EUHaldir_DIEBV5
				AnimationMode				= ONCE
			End
			Animation						= Bow2
				AnimationName				= EUHaldir_DIEBV5
				AnimationMode				= ONCE
			End
			Animation						= WantBow
				AnimationName				= EUHaldir_LNDA
				AnimationMode				= ONCE
			End
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_Fly"
				then
					CurDrawableHideSubObject("ArrowNock")
					CurDrawableHideSubObject("arrow")
					return "WantBow"
				end
				if GetClientRandomNumberReal(0,2) < 1
				then
					CurDrawableShowSubObject("arrow")
					CurDrawableShowSubObject("arrownock")
					return "Bow1"
				else
					CurDrawableShowSubObject("arrow")
					CurDrawableShowSubObject("arrownock")
					return "Bow2"
				end
			EndScript
		End
		AnimationState						= DYING DEATH_1
			Animation						= Sword1
				AnimationName				= EUHaldir_DIESv5
				AnimationMode				= ONCE
			End
			Animation						= Sword2
				AnimationName				= EUHaldir_DIESV5
				AnimationMode				= ONCE
			End
			Animation						= WantSword
				AnimationName				= EUHaldir_LNDB
				AnimationMode				= ONCE
			End
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_Fly"
				then
					CurDrawableShowSubObject("arrow")
					CurDrawableShowSubObject("arrownock")
					return "WantSword"
				end
				CurDrawableHideSubObject("ArrowNock")
				CurDrawableHideSubObject("arrow")
				if GetClientRandomNumberReal(0,2) < 1
				then
					return "Sword1"
				else
					return "Sword2"
				end
			EndScript
		End


		AnimationState						= DYING DEATH_2 WEAPONSET_TOGGLE_1
			Animation						= FadeOut
				AnimationName				= EUHaldir_DIEBV5
				AnimationMode				= ONCE
			End
		End
		AnimationState						= DYING DEATH_2
			Animation						= FadeOut
				AnimationName				= EUHaldir_DIESV5
				AnimationMode				= LOOP
			End
		End


		AnimationState						= STUNNED_STANDING_UP WEAPONSET_TOGGLE_1
			StateName						= STATE_GetUp
			Animation						= Bow
				AnimationName				= EUHaldir_GTPB
				AnimationMode				= ONCE
				AnimationSpeedFactorRange	= 1.42 1.42
			End
			Animation						= WantBow
				AnimationName				= EUHaldir_GTPSX1
				AnimationMode				= ONCE
			End
			Flags						= MAINTAIN_FRAME_ACROSS_STATES4
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_GetUp" or PrevState == "STATE_Land"
				then	
					if PrevAnim == "WantBow" or PrevAnim == "Sword"
					then
						CurDrawableHideSubObject("ArrowNock")
						CurDrawableHideSubObject("arrow")
						return "WantBow"
					end
				else
					CurDrawableShowSubObject("arrow")
					CurDrawableShowSubObject("arrownock")
					return "Bow"
				end
			EndScript
		End
		AnimationState						= STUNNED_STANDING_UP
			StateName						= STATE_GetUp
			Animation						= Sword
				AnimationName				= EUHaldir_GTPSX1
				AnimationMode				= ONCE
				AnimationSpeedFactorRange	= 1.2	1.2
			End
			Animation						= WantSword
				AnimationName				= EUHaldir_GTPB
				AnimationMode				= ONCE
			End
			Flags							= MAINTAIN_FRAME_ACROSS_STATES4
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_GetUp" or PrevState == "STATE_Land"
				then
					if PrevAnim == "Bow" or PrevAnim == "WantSword"
					then	
						CurDrawableShowSubObject("arrow")
						CurDrawableShowSubObject("arrownock")
						return "WantSword"
					end
				end
				CurDrawableHideSubObject("ArrowNock")
				CurDrawableHideSubObject("arrow")
				return "Sword"
			EndScript
		End


		AnimationState						= STUNNED WEAPONSET_TOGGLE_1
			StateName						= STATE_Land
			Animation						= Bow
				AnimationName				= EUHaldir_LNDA
				AnimationMode				= ONCE
			End
			Animation						= WantBow
				AnimationName				= EUHaldir_LNDB
				AnimationMode				= ONCE
			End
			Flags							= MAINTAIN_FRAME_ACROSS_STATES3
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_Fly"
				then
					if PrevAnim == "WantBow" or PrevAnim == "Sword"
					then
						CurDrawableHideSubObject("ArrowNock")
						CurDrawableHideSubObject("arrow")
						return "WantBow"
					end
				end
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				return "Bow"
			EndScript
		End
		AnimationState						= STUNNED
			StateName						= STATE_Land
			Animation						= Sword
				AnimationName				= EUHaldir_LNDB
				AnimationMode				= ONCE
			End
			Animation						= WantSword
				AnimationName				= EUHaldir_LNDA
				AnimationMode				= ONCE
			End
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_Fly"
				then
					if PrevAnim == "WantSword" or PrevAnim == "Bow"
					then
						CurDrawableShowSubObject("arrow")
						CurDrawableShowSubObject("arrownock")
						return "WantSword"
					end
				end
				Flags						= MAINTAIN_FRAME_ACROSS_STATES3
				CurDrawableHideSubObject("ArrowNock")
				CurDrawableHideSubObject("arrow")
				return "Sword"
			EndScript
		End

		AnimationState						= PARALYZED
			Animation
				AnimationName				= EUHaldir_IDLF
				AnimationMode				= LOOP
			End
		End


		AnimationState						= FIRING_OR_PREATTACK_A WEAPONSET_TOGGLE_1
			StateName						= Attacking_Bow
			Animation
				AnimationName				= EUHaldir_ATA2
				AnimationMode				= ONCE
				UseWeaponTiming				= Yes
				AnimationBlendTime			= 20
			End
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("ArrowNock")
			EndScript
		End
		AnimationState						= FIRING_OR_PREATTACK_A
			StateName						= Ready_Sword
			
			Animation						= AttackWithSwordA
				AnimationName				= EUHaldir_ATKSV2
				AnimationMode				= ONCE
				UseWeaponTiming				= Yes
			End
			Animation						= AttackWithSwordB
				AnimationName				= EUHaldir_ATKSV2
				AnimationMode				= ONCE
				UseWeaponTiming				= Yes
			End
			Animation						= AttackWithSwordD
				AnimationName				= EUHaldir_ATKSV4
				AnimationMode				= ONCE
				UseWeaponTiming				= Yes
			End
			BeginScript
				CurDrawableHideSubObject("ArrowNock")
				CurDrawableHideSubObject("arrow")
			EndScript
		End

		AnimationState						= SPECIAL_WEAPON_ONE
			Animation
				AnimationName				= EUHaldir_SPCA
				AnimationMode				= ONCE
			End
			FrameForPristineBonePositions	= 60
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
			EndScript
		End


		AnimationState						= MOVING WEAPONSET_TOGGLE_1
			StateName						= Moving_Bow
			Animation
				AnimationName				= EUHaldir_RUNB
				AnimationMode				= LOOP
			End
			Flags = RANDOMSTART
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				Prev = CurDrawablePrevAnimationState()
				if Prev == "Moving_Sword" then CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Moving") end
			EndScript
		End
		AnimationState						= MOVING
			StateName						= Moving_Sword
			Animation
				AnimationName				= EUHaldir_RUNS
				AnimationMode				= LOOP
			End
			Flags = RANDOMSTART
			BeginScript
				CurDrawableHideSubObject("arrow")
				CurDrawableHideSubObject("arrownock")
				Prev = CurDrawablePrevAnimationState()
				if Prev == "Moving_Bow" then CurDrawableSetTransitionAnimState("TRANS_BowToSword_Moving") end
			EndScript
		End


		AnimationState						= PREATTACK_A WEAPONSET_TOGGLE_1
			Animation						= ReadyToDrawn
				AnimationName				= EUHaldir_ATA1
				AnimationMode				= ONCE
				AnimationBlendTime			= 0
				UseWeaponTiming				= Yes
			End
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("ArrowNock")
			EndScript
		End

		AnimationState						= FIRING_OR_RELOADING_A WEAPONSET_TOGGLE_1
			StateName						= STATE_Firing
			Animation
				AnimationName				= EUHaldir_ATA2
				AnimationMode				= ONCE
				AnimationBlendTime			= 30
				UseWeaponTiming				= Yes
				AnimationSpeedFactorRange	= 1.5 1.5
			End
			Flags							= START_FRAME_FIRST
			BeginScript
				CurDrawableHideSubObject("arrow")
				CurDrawableHideSubObject("ArrowNock")
			EndScript
		End


		AnimationState						= MOVING BACKING_UP WEAPONSET_TOGGLE_1
			StateName						= STATE_BackingUp
			Animation						= Bow
				AnimationName				= EUHaldir_BAKB
				AnimationMode				= LOOP
			End
			Animation						= WantBow
				AnimationName				= EUHaldir_BAKS
				AnimationMode				= LOOP
			End
			Flags							= MAINTAIN_FRAME_ACROSS_STATES4
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				PrevAnim	= CurDrawablePrevAnimation()
				PrevState	= CurDrawablePrevAnimationState()
				if PrevState == "STATE_BackingUp"
				then
					if PrevAnim == "WantBow" or PrevAnim == "Sword"
					then
						return "WantBow"
					end
				end
				return "Bow"
			EndScript
		End
		AnimationState						= MOVING BACKING_UP
			StateName						= STATE_BackingUp
			Animation						= Sword
				AnimationName				= EUHaldir_BAKS
				AnimationMode				= LOOP
			End
			Animation						= WantSword
				AnimationName				= EUHaldir_BAKS
				AnimationMode				= LOOP
			End
			Flags							= MAINTAIN_FRAME_ACROSS_STATES4
			BeginScript
				CurDrawableHideSubObject("ARROW")
				CurDrawableHideSubObject("ARROWNOCK")
				PrevAnim	= CurDrawablePrevAnimation()
				PrevState	= CurDrawablePrevAnimationState()
				if PrevState == "STATE_BackingUp"
				then
					if PrevAnim == "Bow" or PrevAnim == "WantSword"
					then
						return "WantSword"
					end
				end
				return "Sword"
			EndScript
		End


		AnimationState						= CONTINUOUS_FIRE_MEAN
			Animation						= HangFrameWhileCoasting
				AnimationName				= EUHaldir_ATA2
				AnimationMode				= MANUAL
				AnimationBlendTime			= 20
			End
			Flags							= START_FRAME_LAST
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("ARROWNOCK")
				if CurDrawablePrevAnimationState() == "STATE_Firing" then CurDrawableAllowToContinue() end
			EndScript
			;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
			;;;;
			;;;;	VERY IMPORTANT ARCHER INFORMATION
			;;;;	THIS WILL STOP THE JITTERS, AND BEST
			;;;;	YET, IT'S A COMPLETE HACK! Just look above.
			;;;;	We say that if we get into this state
			;;;;	from firing, just continue to fire. DONE.
			;;;;
			;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		End
		AnimationState						= CONTINUOUS_FIRE_SLOW
			StateName						= Ready_Bow
			Animation						= PutAwayArrow
				AnimationName				= EUHaldir_ATA3
				AnimationMode				= ONCE
			End
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("ARROWNOCK")
			EndScript
		End


		AnimationState						= ATTACKING WEAPONSET_TOGGLE_1
			StateName						= Ready_Bow
			Animation						= IDLB
				AnimationName				= EUHaldir_IDLB
				AnimationMode				= LOOP
			End
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				if Prev == "Bored_Bow" then CurDrawableSetTransitionAnimState("TRANS_BR_Bow") end
				if Prev == "Selected_Bow" then CurDrawableSetTransitionAnimState("TRANS_SelectedToReady_Bow") end
				if Prev == "Selected_Sword" or Prev == "Moving_Sword" or Prev == "Ready_Sword" or Prev == "Bored_Sword" or PrevAnim == "WantBow"
				then 
					CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")
				end
			EndScript
		End
		AnimationState						= ATTACKING
			StateName						= Ready_Sword
			Animation						= Alert_1
				AnimationName				= EUHaldir_IDLST1
				AnimationMode				= LOOP
			End
			BeginScript
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("ArrowNock")
				CurDrawableHideSubObject("arrow")
				if Prev == "Bored_Sword" then CurDrawableSetTransitionAnimState("TRANS_BR_Sword") end
				if Prev == "Selected_Bow" or Prev == "Moving_Bow" or Prev == "Ready_Bow" or Prev == "Bored_Bow" or PrevAnim == "WantSword"
				then 
					CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
				end
			EndScript
		End


		AnimationState						= ENGAGED WEAPONSET_TOGGLE_1
			StateName						= Ready_Bow
			Animation						= IDLB
				AnimationName				= EUHaldir_IDLB
				AnimationMode				= LOOP
			End
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				if Prev == "Bored_Bow"		then CurDrawableSetTransitionAnimState("TRANS_BR_Bow")				end
				if Prev == "Selected_Bow"	then CurDrawableSetTransitionAnimState("TRANS_SelectedToReady_Bow")				end
				if Prev == "Selected_Sword" or Prev == "Moving_Sword" or Prev == "Ready_Sword" or Prev == "Bored_Sword" or PrevAnim == "WantBow"
				then 
					CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")	
				end
			EndScript
		End
		AnimationState						= ENGAGED
			StateName						= Ready_Sword
			Animation						= Alert_1
				AnimationName				= EUHaldir_IDLST1
				AnimationMode				= LOOP
			End
			BeginScript
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("ArrowNock")
				CurDrawableHideSubObject("arrow")
				if Prev == "Bored_Sword"		then CurDrawableSetTransitionAnimState("TRANS_BR_Sword")			end
				if Prev == "Selected_Bow" or Prev == "Moving_Bow" or Prev == "Ready_Bow" or Prev == "Bored_Bow" or PrevAnim == "WantSword"
				then 
					CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")	
				end
			EndScript
		End


		AnimationState						= EMOTION_ALERT WEAPONSET_TOGGLE_1
			StateName						= Ready_Bow
			Animation						= IDLB
				AnimationName				= EUHaldir_IDLB
				AnimationMode				= LOOP
			End
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				if Prev == "Bored_Bow"		then CurDrawableSetTransitionAnimState("TRANS_BR_Bow") end
				if Prev == "Selected_Bow"	then CurDrawableSetTransitionAnimState("TRANS_SelectedToReady_Bow") end
				if Prev == "Selected_Sword" or Prev == "Moving_Sword" or Prev == "Ready_Sword" or Prev == "Bored_Sword" or PrevAnim == "WantBow"
				then 
					CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")	
				end				
			EndScript
		End 
		AnimationState						= EMOTION_ALERT
			StateName						= Ready_Sword
			Animation						= Alert_1
				AnimationName				= EUHaldir_IDLST1
				AnimationMode				= LOOP
			End
			BeginScript
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("ArrowNock")
				CurDrawableHideSubObject("arrow")
				if Prev == "Bored_Sword" then CurDrawableSetTransitionAnimState("TRANS_BR_Sword") end
				if Prev == "Selected_Bow" or Prev == "Moving_Bow" or Prev == "Ready_Bow" or Prev == "Bored_Bow" or PrevAnim == "WantSword"
				then 
					CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")	
				end
			EndScript
		End


		AnimationState						= EMOTION_CELEBRATING WEAPONSET_TOGGLE_1
			StateName						= STATE_Emotion_Bow
			Animation						= Bow
				AnimationName				= EUHaldir_CHRB
				AnimationMode				= ONCE
			End
			Animation						= Bow2
				AnimationName				= EUHaldir_CHRB
				AnimationMode				= ONCE
			End
			Flags							= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				if PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")
					end
				elseif PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
				elseif PrevState == "Selected_Bow"
				then
					CurDrawableSetTransitionAnimState("TRANS_SelectedToReady_Bow")
				end
			EndScript
		End
		AnimationState						= EMOTION_CELEBRATING
			StateName						= STATE_Emotion_Sword
			Animation						= Sword
				AnimationName				= EUHaldir_CHRS
				AnimationMode				= ONCE
			End
			Animation						= Sword2
				AnimationName				= EUHaldir_CHRS
				AnimationMode				= ONCE
			End
			Flags							= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrow")
				CurDrawableHideSubObject("arrownock")
				
				if PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
					end
				elseif PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
				elseif PrevState == "Bored_Sword"
				then
					CurDrawableSetTransitionAnimState("TRANS_BR_Sword")
				end
			EndScript
		End
		


		AnimationState						= EMOTION_TAUNTING WEAPONSET_TOGGLE_1
			StateName						= STATE_Emotion_Bow
			Animation						= Bow1
				AnimationName				= EUHaldir_TNTA
				AnimationMode				= ONCE
			End
			Animation						= Bow2
				AnimationName				= EUHaldir_TNTA
				AnimationMode				= ONCE
			End
			Flags							= RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				
				if PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")
					end
				elseif PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
				elseif PrevState == "Selected_Bow"
				then
					CurDrawableSetTransitionAnimState("TRANS_SelectedToReady_Bow")
				elseif PrevState == "Bored_Bow"
				then
					CurDrawableSetTransitionAnimState("TRANS_BR_Bow")
				end
			EndScript
		End
		AnimationState						= EMOTION_TAUNTING
			StateName						= STATE_Emotion_Sword
			Animation						= Sword
				AnimationName				= EUHaldir_TNTB
				AnimationMode				= ONCE
			End
			Animation						= Sword2
				AnimationName				= EUHaldir_TNTB
				AnimationMode				= ONCE
			End
			Flags							= RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrow")
				CurDrawableHideSubObject("arrownock")
				if PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
					end
				elseif PrevState == "STATE_Emotion_Sword"
					then
						CurDrawableAllowToContinue()
				elseif PrevState == "Bored_Sword"
				then
					CurDrawableSetTransitionAnimState("TRANS_BR_Sword")
				end
			EndScript
		End


		AnimationState						= EMOTION_POINTING WEAPONSET_TOGGLE_1
			StateName						= STATE_Emotion_Bow
			Animation						= Bow
				AnimationName				= EUHaldir_PNTA
				AnimationMode				= ONCE
			End
			Animation						= Bow2
				AnimationName				= EUHaldir_PNTA
				AnimationMode				= ONCE
			End
			Flags							= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				
				if PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")
					end
				elseif PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
				elseif PrevState == "Selected_Bow"
				then
					CurDrawableSetTransitionAnimState("TRANS_SelectedToReady_Bow")
				elseif PrevState == "Bored_Bow"
				then
					CurDrawableSetTransitionAnimState("TRANS_BR_Bow")
				end
			EndScript
		End
		AnimationState						= EMOTION_POINTING
			StateName						= STATE_Emotion_Sword
			Animation						= Sword
				AnimationName				= EUHaldir_PNTB
				AnimationMode				= ONCE
			End
			Animation						= Sword2
				AnimationName				= EUHaldir_PNTB
				AnimationMode				= ONCE
			End
			Flags							= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrow")
				CurDrawableHideSubObject("arrownock")
				
				if PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
					end
				elseif PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
				elseif PrevState == "Bored_Sword"
				then
					CurDrawableSetTransitionAnimState("TRANS_BR_Sword")
				end
			EndScript
		End


		AnimationState 						= HIT_REACTION HIT_LEVEL_1 WEAPONSET_TOGGLE_1
			StateName						= Bored_Bow
			Animation
				AnimationName				= EUHaldir_HITA
				AnimationMode 				= ONCE
				AnimationSpeedFactorRange	= .9 .9
			End
		End
		AnimationState						= HIT_REACTION HIT_LEVEL_1
			StateName						= Bored_Sword
			Animation
				AnimationName				= EUHaldir_HITE
				AnimationMode				= ONCE
			End
		End

		AnimationState						= RAISING_FLAG WEAPONSET_TOGGLE_1
			StateName						= STATE_Emotion_Bow
			Animation						= Bow
				AnimationName				= EUHaldir_CHRB
				AnimationMode				= ONCE
			End
			Animation						= Bow2
				AnimationName				= EUHaldir_CHRB
				AnimationMode				= ONCE
			End
			Flags							= RESTART_ANIM_WHEN_COMPLETE
		End

		AnimationState						= SELECTED WEAPONSET_TOGGLE_1
			StateName						= Selected_Bow
			Animation						= ATNE
				AnimationName				= EUHaldir_ATNE
				AnimationMode				= LOOP
			End
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				if Prev == "STATE_Emotion_Bow" or Prev == "STATE_Emotion_Sword" then CurDrawableAllowToContinue() end
				if Prev == "Bored_Bow" then CurDrawableSetTransitionAnimState("TRANS_BoredToSelected_Bow") end
				if Prev == "Ready_Bow" then CurDrawableSetTransitionAnimState("TRANS_RS_Bow") end
				if Prev == "Selected_Sword" or Prev == "Moving_Sword" or Prev == "Ready_Sword" or Prev == "Bored_Sword" or PrevAnim == "WantBow"
				then 
					CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Selected")	
				end
			EndScript
		End

		AnimationState						= RAISING_FLAG
			StateName						= STATE_Emotion_Sword
			Animation						= Sword
				AnimationName				= EUHaldir_CHRS
				AnimationMode				= ONCE
			End
			Animation						= Sword2
				AnimationName				= EUHaldir_CHRS
				AnimationMode				= ONCE
			End
			Flags							= RESTART_ANIM_WHEN_COMPLETE
		End
		
		AnimationState						= SELECTED
			StateName						= Selected_Sword
			Animation						= ATNA
				AnimationName				= EUHaldir_ATNS
				AnimationMode				= LOOP
			End
			BeginScript
				CurDrawableHideSubObject("ARROW")
				CurDrawableHideSubObject("ARROWNOCK")
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				if Prev == "STATE_Emotion_Bow" or Prev == "STATE_Emotion_Sword" then CurDrawableAllowToContinue() end
				if Prev == "Bored_Sword" then CurDrawableSetTransitionAnimState("TRANS_BoredToSelected_Sword") end
				if Prev == "Ready_Sword" then CurDrawableSetTransitionAnimState("TRANS_ReadyToSelected_Sword") end
				if Prev == "Selected_Bow" or Prev == "Moving_Bow" or Prev == "Ready_Bow" or Prev == "Bored_Bow" or PrevAnim == "WantSword" or PrevAnim == "EUHaldir_STHB"
				then
					CurDrawableSetTransitionAnimState("TRANS_BowToSword_Selected")
				end
			EndScript
		End


		IdleAnimationState
			StateName						= Bored_Sword
			Animation						= Idle_Sword1
				AnimationName				= EUHaldir_IDLF
				AnimationMode				= ONCE
			End
			Animation						= Idle_Sword2
				AnimationName				= EUHaldir_IDLF
				AnimationMode				= ONCE
			End
			Animation						= Idle_Sword3
				AnimationName				= EUHaldir_IDLF
				AnimationMode				= ONCE
			End
			Animation						= IdleNoFidget
				AnimationName				= EUHaldir_IDLF
				AnimationMode				= ONCE
				AnimationPriority			= 20
			End
			Animation						= IdleNoFidget2
				AnimationName				= EUHaldir_IDLF
				AnimationMode				= ONCE
				AnimationPriority			= 0
			End
			Flags							= RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				CurDrawableHideSubObject("ARROW")
				CurDrawableHideSubObject("ARROWNOCK")
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				if Prev == "TRANS_SelectedToBored_Sword" or Prev == "TRANS_RB_Sword" then return "IdleNoFidget" end
				if Prev == "Selected_Sword" then CurDrawableSetTransitionAnimState("TRANS_SelectedToBored_Sword") end
				if Prev == "Ready_Sword" then CurDrawableSetTransitionAnimState("TRANS_RB_Sword") end
				if Prev == "Selected_Bow" or Prev == "Moving_Bow" or Prev == "Ready_Bow" or Prev == "Bored_Bow" or PrevAnim == "WantSword"
				then 
					CurDrawableSetTransitionAnimState("TRANS_BowToSword_Selected")
				end
			EndScript
		End


		AnimationState						= WEAPONSET_TOGGLE_1
			StateName						= Bored_Bow
			Animation						= IdleBowB
				AnimationName				= EUHaldir_IDLE
				AnimationMode				= ONCE
			End
			Animation						= IdleBowD
				AnimationName				= EUHaldir_IDLE
				AnimationMode				= ONCE
			End
			Animation						= IdleNoFidget
				AnimationName				= EUHaldir_IDLE
				AnimationMode				= ONCE
				AnimationPriority			= 20
			End
			Animation						= IdleNoFidget2
				AnimationName				= EUHaldir_IDLE
				AnimationMode				= ONCE
				AnimationPriority			= 10
			End
			Flags							= RESTART_ANIM_WHEN_COMPLETE
			BeginScript	
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				if Prev == "TRANS_SelectedToBored_Bow" or Prev == "TRANS_RB_Bow" then return "IdleNoFidget" end
				if Prev == "Selected_Bow" then CurDrawableSetTransitionAnimState("TRANS_SelectedToBored_Bow") end
				if Prev == "Ready_Bow" then CurDrawableSetTransitionAnimState("TRANS_RB_Bow") end
				if Prev == "Selected_Sword" or Prev == "Moving_Sword" or Prev == "Ready_Sword" or Prev == "Bored_Sword" or PrevAnim == "WantBow"
				then 
					CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Selected")
				end
			EndScript
		End


		; Transitions

		TransitionState						= TRANS_BoredToSelected_Bow
			Animation
				AnimationName				= EUHaldir_ATNB
				AnimationMode				= ONCE
				AnimationBlendTime			= 10
			End
		End


		TransitionState						= TRANS_SelectedToReady_Bow
			Animation						= ATNE
				AnimationName				= EUHaldir_IDLB
				AnimationMode				= ONCE
				AnimationBlendTime			= 10
			End
		End


		TransitionState						= TRANS_SelectedToBored_Bow
			Animation
				AnimationName				= EUHaldir_ATNB
				AnimationMode				= ONCE_BACKWARDS
			End
			Flags							= START_FRAME_LAST
		End


		TransitionState						= TRANS_RS_Bow
			Animation						= ATNF
				AnimationName				= EUHaldir_IDLB
				AnimationMode				= ONCE_BACKWARDS
				AnimationBlendTime			= 10
			End
			Flags							= START_FRAME_LAST
		End


		TransitionState						= TRANS_BR_Bow
			Animation						= IDLB
				AnimationName				= EUHaldir_IDLST1
				AnimationMode				= ONCE
				AnimationBlendTime			= 20
			End
		End


		TransitionState						= TRANS_RB_Bow
			Animation						= IDLD
				AnimationName				= EUHaldir_IDLB
				AnimationMode				= ONCE
				AnimationBlendTime			= 20
			End
		End


		TransitionState					= TRANS_BoredToSelected_Sword
			Animation					= ATNA
				AnimationName			= EUHaldir_ATNA
				AnimationMode			= ONCE
			End
		End


		TransitionState					= TRANS_SR_Sword
			Animation					= ATNC
				AnimationName			= EUHaldir_STHA
				AnimationMode			= ONCE
			End
		End


		TransitionState					= TRANS_SelectedToBored_Sword
			Animation					= ATNA
				AnimationName			= EUHaldir_ATNA
				AnimationMode			= ONCE_BACKWARDS
			End
			Flags						= START_FRAME_LAST
		End


		TransitionState					= TRANS_ReadyToSelected_Sword
			Animation					= ATNC
				AnimationName			= EUHaldir_IDLST1
				AnimationMode			= ONCE_BACKWARDS
				AnimationBlendTime		= 20
			End
			Flags						= START_FRAME_LAST
		End


		TransitionState					= TRANS_BR_Sword
			Animation					= ATNS
				AnimationName			= EUHaldir_STHA
				AnimationMode			= ONCE
				AnimationBlendTime		= 20
			End
		End


		TransitionState					= TRANS_RB_Sword
			Animation					= IDLG
				AnimationName			= EUHaldir_STHA
				AnimationMode			= ONCE
				AnimationBlendTime		= 20
			End
		End
		


		TransitionState					= TRANS_SwordToBow_Moving
			Animation					= DrawBow
				AnimationName			= EUHaldir_STHC
				AnimationMode			= ONCE
			End
		End


		TransitionState					= TRANS_BowToSword_Moving
			Animation					= DrawSword
				AnimationName			= EUHaldir_STHD
				AnimationMode			= ONCE
			End
		End


		TransitionState					= TRANS_BowToSword_Ready
			Animation					= DrawSwords
				AnimationName			= EUHaldir_STHA
				AnimationMode			= ONCE
			End
		End


		TransitionState					= TRANS_SwordToBow_Ready
			Animation					= DrawBow
				AnimationName			= EUHaldir_STHB
				AnimationMode			= ONCE
			End
		End


		TransitionState					= TRANS_BowToSword_Selected
			Animation					= DrawSwords
				AnimationName			= EUHaldir_STHA
				AnimationMode			= ONCE
			End
		End


		TransitionState					= TRANS_SwordToBow_Selected
			Animation					= DrawBow
				AnimationName			= EUHaldir_STHB
				AnimationMode			= ONCE
			End
		End
	End
	
    #include "..\..\..\includes\StunDrawModuleSmall.inc"


	
	; ***DESIGN parameters ***

	Side 		= Wild
	EditorSorting 	= UNIT
	ThreatLevel 	= 1.0
	Scale		= 1.15
	ThingClass 	= HORDE_UNIT
	CommandPoints 	= 60


	TransportSlotCount = BFA_TRANSPORTSLOTCOUNT_UNIT				; 1
;	WeaponSet
;		Conditions 	= None 
;		Weapon 		= PRIMARY    MirkwoodArcherBow
;		Weapon 		= TERTIARY   MirkwoodArcherBowBombard
;		AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
;		AutoChooseSources = TERTIARY FROM_PLAYER FROM_SCRIPT				; Not AI.
;	End
	WeaponSet
		Conditions 	= WEAPONSET_TOGGLE_1								; PLAYER_UPGRADE
		Weapon 		= PRIMARY MirkwoodArcherSilverthornBow
		Weapon 		= TERTIARY MirkwoodArcherSilverthornBowBombard
		AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
		AutoChooseSources = TERTIARY FROM_PLAYER FROM_SCRIPT				; Not AI.
	End
	WeaponSet
		Conditions 	= None ; CONTESTING_BUILDING
		Weapon 		= PRIMARY ElvenLindonWarriorSword
		Weapon 		= TERTIARY  MirkwoodArcherSilverthornBowBombard
		AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
	End
	; sword upgrade	
;	WeaponSet
;		Conditions 	= PLAYER_UPGRADE WEAPONSET_TOGGLE_1 CONTESTING_BUILDING
;		Weapon 		= PRIMARY ElvenLindonWarriorSword
    ;	AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
;	End
		
	ArmorSet
		Conditions      = None
		Armor           = HeroMiniFootArmor
		DamageFX        = NormalDamageFX
	End

	BuildCost = 750			
	BuildTime = BFA_ELVEN_NOLDORWARRIOR_BUILDTIME	
	VisionRange = BFA_ELVEN_NOLDORWARRIOR_VISION_RANGE
        ShroudClearingRange = BFA_SHROUD_CLEAR_STANDARD

	BountyValue = BFA_ELVEN_NOLDORWARRIOR_BOUNTY_VALUE 		
	DisplayName = OBJECT:KullHunter
	CrushableLevel = 2  				; What am I?:        0 = for infantry, 1 = for trees, 2 = general vehicles

	CrushRevengeWeapon = SuperInfantryCrushRevenge
	
	CommandSet = KullHunterCommandSet
	
	

	; *** AUDIO Parameters ***;
 
			VoiceAttack 							= HeroUrukHaiVoiceAttack
			VoiceAttackAir							= HeroUrukHaiVoiceAttack
			VoiceAttackCharge 						= HeroUrukHaiVoiceAttack
			VoiceAttackMachine 						= HeroUrukHaiVoiceAttack
			VoiceAttackStructure 					= HeroUrukHaiVoiceAttack
			VoiceCreated							= HeroUrukHaiVoiceSalute
			VoiceFear								= HeroUrukHaiVoiceHelpMe
			VoiceFullyCreated						= HeroUrukHaiVoiceSalute
			VoiceGuard								= HeroUrukHaiVoiceMove
			VoiceMove 								= HeroUrukHaiVoiceMove
			VoiceMoveToCamp 						= HeroUrukHaiVoiceMove
			VoiceMoveWhileAttacking 				= HeroUrukHaiVoiceMove
			VoicePriority							= 95
			VoiceRetreatToCastle 					= HeroUrukHaiVoiceMove
			VoiceSelect 							= HeroUrukHaiVoiceSelectMS
			VoiceSelectBattle  						= HeroUrukHaiVoiceSelectBattle
		
			SoundImpact								= ImpactHorse
		
			UnitSpecificSounds
				VoiceEnterUnitElvenTransportShip	= HeroUrukHaiVoiceMove
				VoiceEnterUnitMordorMumakil			= HeroUrukHaiVoiceMove
				VoiceEnterUnitSlaughterHouse		= HeroUrukHaiVoiceMove
				VoiceEnterUnitTransportShip			= HeroUrukHaiVoiceMove
				VoiceGarrison						= HeroUrukHaiVoiceMove
				VoiceInitiateCaptureBuilding		= HeroUrukHaiVoiceCaptureBuilding
			End
		

    #include "..\..\..\includes\StandardUnitEvaEvents.inc"


	; *** ENGINEERING Parameters ***
	RadarPriority = UNIT
	KindOf = PRELOAD SELECTABLE CAN_CAST_REFLECTIONS INFANTRY SCORE THROWN_OBJECT PATH_THROUGH_EACH_OTHER ARCHER ATTACK_NEEDS_LINE_OF_SIGHT GRAB_AND_DROP
	
	Body = ActiveBody ModuleTag_02
		CheerRadius 	  = BFA_EMOTION_CHEER_RADIUS
		MaxHealth         = BFA_ELVEN_NOLDORWARRIOR_HEALTH			;BALANCE RohanElvenWarrior
		MaxHealthDamaged  = BFA_ELVEN_NOLDORWARRIOR_HEALTH_DAMAGED		
		RecoveryTime      = BFA_ELVEN_NOLDORWARRIOR_HEALTH_RECOVERY_TIME		
	End
	
	; ========================== Weapon Song ==================================
	Behavior = UnpauseSpecialPowerUpgrade ModuleTag_GlorfindelBladeOfPurityEnabler
		SpecialPowerTemplate		= SpecialAbilityGlorfindelBladeOfPurity
		TriggeredBy			= Upgrade_MiniHordeLvl7
	End
  	Behavior = SpecialPowerModule ModuleTag_GlorfindelBladeOfPurityStarter
		SpecialPowerTemplate		= SpecialAbilityGlorfindelBladeOfPurity
		StartsPaused			= Yes
		SetModelCondition		= ModelConditionState:USER_1
		SetModelConditionTime		= 2.0
	End
	Behavior = SpecialAbilityUpdate ModuleTag_GlorfindelBladeOfPurityUpdate
		SpecialPowerTemplate		= SpecialAbilityGlorfindelBladeOfPurity
		TriggerAttributeModifier	= NoldorWeaponSong
		AttributeModifierDuration	= 30000
;		TriggerSound			= WeaponSongSound
	End
	Behavior = AutoAbilityBehavior ModuleTag_BladeOfPurityAutoAbility
		SpecialAbility			= SpecialAbilityGlorfindelBladeOfPurity
		MaxScanRange			= 200
		Query				= 1 ALL ENEMIES
	End
	
	

	Behavior = AIUpdateInterface ModuleTag_03
		AutoAcquireEnemiesWhenIdle	= Yes ATTACK_BUILDINGS
		CanAttackWhileContained		= Yes
		AILuaEventsList			= RohanArcherFunctions
		AttackPriority			= AttackPriority_Archer
		BurningDeathTime		= BFA_BURNINGDEATH_DURATION_INFANTRY
	End


	LocomotorSet
		Locomotor = HumanLocomotor
		Condition = SET_NORMAL 
		Speed     = BFA_NORMAL_GOOD_FAST_MEMBER_SPEED		
	End

	LocomotorSet
		Locomotor = HumanWanderLocomotor
		Condition = SET_WANDER
		Speed     = BFA_NORMAL_GOOD_FAST_MEMBER_SPEED		
	End

	LocomotorSet
		Locomotor = HumanPanicLocomotor
		Condition = SET_PANIC
		Speed	  = BFA_NORMAL_GOOD_FAST_MEMBER_SPEED		
	End
	
	LocomotorSet
		Locomotor = HumanScaredLocomotor
		Condition = SET_SCARED
		Speed	  = BFA_NORMAL_GOOD_FAST_MEMBER_SPEED		
	End
		
;	Behavior = StealthUpdate StealthUpdateModuleTag
;		StealthDelay					= 500         			; msec
;		FriendlyOpacityMin				= BFA_STEALTH_FRIENDLY_OPACITY_MIN
;		FriendlyOpacityMax				= BFA_STEALTH_FRIENDLY_OPACITY_MAX
;		PulseFrequency					= 750   			; msec
;		StealthForbiddenConditions			= AWAY_FROM_TREES ATTACKING
;		OrderIdleEnemiesToAttackMeUponReveal		= Yes
;		DetectedByAnyoneRange				= 120
;		RevealWeaponSets				= CLOSE_RANGE CONTESTING_BUILDING
;	End
;	Behavior = StealthUpdate StealthUpdateModuleTag
;		StealthDelay				= 500         			; msec
;		FriendlyOpacityMin			= 15.0%
;		FriendlyOpacityMax			= 60.0%
;		PulseFrequency				= 750   			; msec
;		StealthForbiddenConditions		= HORDEBRAIN_NOT_STEALTHED
;		OrderIdleEnemiesToAttackMeUponReveal	= Yes
;		DetectedByAnyoneRange			= 120
;		RevealWeaponSets			= CLOSE_RANGE CONTESTING_BUILDING
;	End
	
	; Fire arrow upgrade
	Behavior = WeaponSetUpgrade ModuleTag_14
		TriggeredBy = Upgrade_ElvenSilverthornArrows
	End
	
	Behavior = DualWeaponBehavior ModuleTag_13
		SwitchWeaponOnCloseRangeDistance = 21
	End

	Behavior = PhysicsBehavior ModuleTag_04
		GravityMult = 1.0
	End
	
	Behavior = SlowDeathBehavior ModuleTag_05
		DeathTypes = ALL -KNOCKBACK
		SinkDelay = 3000
		SinkRate = 0.5     ; in Dist/Sec
		DestructionDelay = 5000
            Sound = INITIAL ElvenWarriorVoiceDie

	End
	
	Behavior = SquishCollide ModuleTag_06
		;nothing
	End

	Behavior = BezierProjectileBehavior ModuleTag_08 ; Module starts asleep, and wakes up when thrown.
		; 
		FirstHeight = 25  ; Height of Bezier control points above highest intervening terrain
		SecondHeight = 25
		FirstPercentIndent = 30% ; Percentage of shot distance control points are placed
		SecondPercentIndent = 70%
		TumbleRandomly = Yes

		CrushStyle = Yes ; I don't detonate, I just hit
		DieOnImpact = Yes
		BounceCount = 1   ; When I hit the ground, I'll arc again
		BounceDistance = 41 ; this far
		BounceFirstHeight = 25  ; Height of Bezier control points above highest intervening terrain
		BounceSecondHeight = 25
		BounceFirstPercentIndent = 20% ; Percentage of shot distance control points are placed
		BounceSecondPercentIndent = 80%

		GroundHitFX       = FX_ThrownRockGroundHit
		GroundBounceFX    = FX_ThrownRockBounceHit
	End

	; Tie into LargeGroupAudio system
		Behavior = LargeGroupAudioUpdate ModuleTag_LGAU
			Key = Elf Unit Infantry Elf_Warrior
		End

	Behavior = StancesBehavior ModuleTag_StancesBehavior
        StanceTemplate = FighterHorde
    End	
	
    Behavior = SpawnBehavior ModuleTag_SpawnDogs
        TriggeredBy            = Upgrade_MiniHordeLvl1
        SpawnNumber            = 2
        InitialBurst            = 2
        SpawnTemplateName        = SlavedUrgalDog
        SpawnReplaceDelay        = 30000
        FadeInTime            = 1000
    End
	
	Behavior = ProductionUpdate ProductionUpdateModuleTag
	End

	Behavior = QueueProductionExitUpdate ModuleTag_Exit
		PlacementViewAngle = 10
		UnitCreatePoint = X:0.0 Y:10.0 Z:0.0
		NaturalRallyPoint = X:10.0 Y:5.0 Z:0.0 ;NaturalRallyPointX must always match GeometryMajorRadius!
	End

	Behavior = UnpauseSpecialPowerUpgrade ModuleTag_TheodenLeadership2
		SpecialPowerTemplate = SpecialAbilityFakeLeadership2
		TriggeredBy = Upgrade_MiniHordeLvl5
	End
	Behavior = SpecialPowerModule ModuleTag_TheodenLeadershipUpdate2 
		SpecialPowerTemplate      = SpecialAbilityFakeLeadership2
		UpdateModuleStartsAttack  = No
		StartsPaused = Yes
	End	
	Behavior = AttributeModifierAuraUpdate ModuleTag_Leadership2
		StartsActive	= No ;If no, requires upgrade to turn on.
		BonusName		= EomerPassiveOutlawLeadership
		TriggeredBy		= Upgrade_MiniHordeLvl5
		RefreshDelay	= 2000
		Range			= 0
		AllowSelf		= Yes		
		ObjectFilter	= ANY +CAVALRY +INFANTRY -STRUCTURE -BASE_FOUNDATION -DOZER
	End	
	
	;------------------ AnimationAudio ---- ElvenWarriorVoice WeaponModes ---------------
	;
	;  This was the old hookup for ElvenWarriorVoice switch bow or sword; not it's in CommandButton.INI
	;
	;ClientBehavior = AnimationSoundClientBehavior ModuleTag_AnimAudioBehavior
	;	MaxUpdateRangeCap = 800
	;	AnimationSound = Sound: ElvenWarriorVoiceModeSword Animation: RUElfWar_STHA Frames: 0
	;	AnimationSound = Sound: ElvenWarriorVoiceModeBow Animation: RUElfWar_STHB Frames: 0
	;	AnimationSound = Sound: ElvenWarriorVoiceModeSword Animation: RUElfWar_RUNC Frames: 0
	;	AnimationSound = Sound: ElvenWarriorVoiceModeBow Animation: RUElfWar_RUNT Frames: 0
	;End
	
	;-----------------
	
	Geometry = CYLINDER
	GeometryMajorRadius = 8.0
	GeometryMinorRadius = 8.0
	GeometryHeight = 19.2
	GeometryIsSmall = Yes
	Shadow = SHADOW_DECAL
	ShadowSizeX = 14;
	ShadowSizeY = 14;
	ShadowTexture = ShadowI;
End

//------------------------------------------------------------------------------------------------------------------------------------------------------------

Object UrgalDog
	// *** ART Parameters ***
    
	// This is required for garrisoned objects - please put in all objects.
	ButtonImage		= ub_uuhunter
	SelectPortrait  	= up_uuhunter
	

	Draw = W3DHordeModelDraw ModuleTag_01

		OkToChangeModelColor = Yes
		  
		StaticModelLODMode = Yes
		// specify options for static LODs
		LodOptions	= LOW
			AllowMultipleModels		=	BFA_ALLOW_MULTIPLE_MODELS_LOW
			MaxRandomTextures		=	BFA_MAX_RANDOM_TEXTURES_LOW
			MaxRandomAnimations		=	BFA_MAX_RANDOM_ANIMATIONS_LOW
			MaxAnimFrameDelta		=	BFA_MAX_ANIM_FRAME_DELTA_LOW
		End
		
		LodOptions	= MEDIUM
			AllowMultipleModels		=	BFA_ALLOW_MULTIPLE_MODELS_MED
			MaxRandomTextures		=	BFA_MAX_RANDOM_TEXTURES_MED
			MaxRandomAnimations		=	BFA_MAX_RANDOM_ANIMATIONS_MED
			MaxAnimFrameDelta		=	BFA_MAX_ANIM_FRAME_DELTA_MED
		End
		
		LodOptions	= HIGH
			AllowMultipleModels		=	BFA_ALLOW_MULTIPLE_MODELS_HIGH
			MaxRandomTextures		=	BFA_MAX_RANDOM_TEXTURES_HIGH
			MaxRandomAnimations		=	BFA_MAX_RANDOM_ANIMATIONS_HIGH
			MaxAnimFrameDelta		=	BFA_MAX_ANIM_FRAME_DELTA_HIGH
		End
		



		DefaultModelConditionState
			Model				= uudog1_SKN
			Skeleton			= IUWarg_SKL
		End
	

		; Bow version
		ModelConditionState					= WEAPONSET_TOGGLE_1
			Model							= uudog1_SKN
			Skeleton						= IUWarg_SKL
		End

		// -------------- STUNNED ANIMS ----------------
		AnimationState				= PASSENGER
			Animation			= Grabbed
				AnimationName		= IUWarg_GBDA
				AnimationMode		= LOOP
			End
		End
		
		AnimationState				= FREEFALL
			Animation			= freefall
				AnimationName		= IUWarg_FLYA
				AnimationMode		= LOOP
				AnimationBlendTime	= 10
			End
		End
		
		AnimationState				=	DYING SPLATTED
			Animation			=	splatted
				AnimationName		=	IUWarg_LNDA
				AnimationMode		=	ONCE
			End
		End
		
		AnimationState				=	STUNNED_FLAILING 
			Animation			=	JustDie
				AnimationName       	=	IUWarg_FLYA
				AnimationMode       	=	LOOP
			End
		End

		AnimationState				=	DYING
			Animation			=	JustDie
				AnimationName		=	IUWarg_DIEA
				AnimationMode		=	ONCE
			End
		End		

		AnimationState				=	STUNNED 
			Animation			=	Land
				AnimationName       	=	IUWarg_LNDA
				AnimationMode       	=	ONCE
			End
		End

		AnimationState				=	STUNNED_STANDING_UP
			Animation			=	StandUp
				AnimationName       	=	IUWarg_GTPA
				AnimationMode       	=	ONCE
			End
		End
		
		// -------------- MOVING ANIMS ---------------
		AnimationState				=	TURN_LEFT_HIGH_SPEED
			Animation			=	MTurnLeft
				AnimationName		=	IUWarg_TNL1
				AnimationMode		=	LOOP
			End
		End

		AnimationState				=	TURN_RIGHT_HIGH_SPEED
			Animation			=	MTurnRight
				AnimationName		=	IUWarg_TNR1
				AnimationMode		=	LOOP
			End
		End
		
		AnimationState				=	TURN_LEFT  
			Animation			=	TurnRight
				AnimationName		=	IUWarg_TRNL
				AnimationMode		=	LOOP
				AnimationSpeedFactorRange = 	1.0 1.0
			End
		End

		AnimationState				=	TURN_RIGHT 
			Animation			=	TurnRight
				AnimationName		=	IUWarg_TRNR
				AnimationMode		=	LOOP
				AnimationSpeedFactorRange = 	1.0 1.0
			End
		End

		AnimationState				=	MOVING ACCELERATE 
			Animation			=	Accelerate
				AnimationName		=	IUWarg_ACCL
				AnimationMode		=	ONCE
			End
            ParticleSysBone				= 	None GenericSiegeTrailDust
		End
	
		AnimationState				=	MOVING DECELERATE
			Animation			=	Decelerate
				AnimationName		=	IUWarg_DECL
				AnimationMode		=	ONCE
			End
            ParticleSysBone				= 	None GenericSiegeTrailDust
		End

		AnimationState				=	MOVING
			ShareAnimation			=	Yes
			Animation				=	RunA
				AnimationName		=	IUWarg_RUNA
				AnimationMode		=	LOOP
			End
		End
		
		AnimationState				=	MOVING BACKING_UP
			Animation			=	BackingUp
				AnimationName		=	IUWarg_BAKA
				AnimationMode		=	LOOP
			End
		End

		AnimationState				=	MOVING ATTACKING
			ShareAnimation			=	Yes
			Animation			=	RunA
				AnimationName		=	IUWarg_RUNA
				AnimationMode		=	LOOP				
			End
			//ParticleSysBone		=	None CalvaryDustTrails  
		End

		AnimationState				=	MOVING LEASHED_RETURNING
			ShareAnimation			=	Yes
			Animation			=	RunA
				AnimationName		=	IUWarg_RUNA
				AnimationMode		=	LOOP				
			End
			//ParticleSysBone		=	None CalvaryDustTrails  
		End
		
		AnimationState				=	MOVING
			ShareAnimation			=	Yes			
			Animation			=	WalkA
				AnimationName		=	IUWarg_WLKA
				AnimationMode		=	LOOP
				AnimationBlendTime	=	10
				AnimationPriority   	=	10
				Distance		=   	30
			End
			Animation			=	WalkB
				AnimationName		=	IUWarg_WLKB
				AnimationMode		=	LOOP
				AnimationBlendTime	=	10
				AnimationPriority   	=	3
				Distance		=   	30
			End
			Animation			=	WalkC
				AnimationName		=	IUWarg_WLKC
				AnimationMode		=	LOOP
				AnimationBlendTime	=	10
				AnimationPriority   	=	3
				Distance		=   	30
			End
			;ParticleSysBone		=	None CalvaryDustTrails  
		End
		
		// ----------- ATTACKING ANIMS --------------		
		AnimationState				=	BETWEEN_FIRING_SHOTS_A
			Animation			=	BetweenFiringShots
				AnimationName		=	IUWarg_IDLA
				AnimationMode		=	LOOP
				AnimationBlendTime	=   	10
			End
		End

		AnimationState				=	FIRING_OR_PREATTACK_A
			Animation			=	AttackA3
				AnimationName		=	IUWarg_ATKA
				AnimationMode		=	ONCE
				UseWeaponTiming		=	Yes
				AnimationBlendTime  	=	10
			End
		End
		
		AnimationState				=	ATTACKING
			Animation			=	AttackA3
				AnimationName		=	IUWarg_ATKA
				AnimationMode		=	LOOP
				AnimationBlendTime	=   	10
			End
		End

		// ----------- WAR CHANT ANIMS -------------
		AnimationState = WAR_CHANT
			Animation = Chant
				AnimationName = IUWarg_TNTA
				AnimationMode = LOOP
			End
		End

		// ----------- EMOTION ANIMS ---------------
		AnimationState				= EMOTION_TAUNTING
			Animation			= TNTA
				AnimationName		= IUWarg_TNTA
				AnimationMode		= LOOP
			End
		End
		
		AnimationState				= EMOTION_CELEBRATING
			Animation                   	= CHRA
				AnimationName		= IUWarg_CHRA
				AnimationMode		= ONCE
			End
		End
		
		// ----------- IDLE ANIMS ---------------
		AnimationState				= EMOTION_ALERT
			StateName			= STATE_Ready 
			Animation			= ALERT
				AnimationName		= IUWarg_IDLA
				AnimationMode		= LOOP
			End
			BeginScript
				Prev = CurDrawablePrevAnimationState()
				if Prev == "Selected" then CurDrawableSetTransitionAnimState("Selected_to_Ready") end
			EndScript	
		End
		
		// ----------- SELECTED ANIMS --------------
		AnimationState				=	SELECTED
			SimilarRestart			=   	Yes
			Animation			=	AtAttention
				AnimationName		=	IUWarg_ATNB
				AnimationMode		=	LOOP
			End
			StateName			= 	Selected
			BeginScript
				Prev = CurDrawablePrevAnimationState()
				if Prev == "Idle" then CurDrawableSetTransitionAnimState("Idle_to_Selected") end
				if Prev == "STATE_Ready" then CurDrawableSetTransitionAnimState("Ready_to_Selected") end
			EndScript
		End

		IdleAnimationState
			Animation
				AnimationName		=	IUWarg_IDLC
				AnimationMode		=	ONCE
				AnimationBlendTime	=	10
				AnimationPriority   	=	1
			End
			Animation
				AnimationName		=	IUWarg_IDLB
				AnimationMode		=	ONCE
				AnimationBlendTime	=	10
				AnimationPriority   	=	1
			End
			Animation
				AnimationName		=	IUWarg_IDLD
				AnimationMode		=	ONCE
				AnimationBlendTime	=	10
				AnimationPriority   	=	20
			End
			StateName			= 	Idle 
			BeginScript
				Prev = CurDrawablePrevAnimationState()
				if Prev == "Selected" then CurDrawableSetTransitionAnimState("Selected_to_Idle") end
			EndScript
		End

		//------------ TRANSITION ANIMS ----------------
		TransitionState       			= Selected_to_Idle
			Animation           		= ATNE
				AnimationName		=	IUWarg_ATNC
				AnimationMode		=	ONCE
				AnimationSpeedFactorRange = 	0.7 1.3
			End
		End
		
		TransitionState       			= Idle_to_Selected
			Animation           		= ATND
				AnimationName     	= 	IUWarg_ATNA
				AnimationMode   	=	ONCE
				AnimationSpeedFactorRange = 	0.7 1.3
			End
		End

	End

     #include "..\..\..\includes\StunDrawModuleMedium.inc"
  
  	; ***DESIGN parameters ***
  	Side 			= Wild
  	EditorSorting 		= UNIT
  	ThreatLevel 		= 2.0
	Scale				= .5
  	TransportSlotCount 	= BFA_TRANSPORTSLOTCOUNT_UNIT
  	
  	WeaponSet
  		Conditions 	= None 
  		Weapon 		= PRIMARY    WargPackWeapon
		AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
		
  	End
	
;	 WeaponSet
 ; 		Conditions 	= WEAPONSET_TOGGLE_1
  ;		Weapon 		= PRIMARY    NONE
;		AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
;  	End
	  	
  	ArmorSet
  		Conditions      = None
  		Armor           = CavalryArmor
  		DamageFX        = NormalDamageFX
  	End
  
;  	ArmorSet
;  		Conditions      = PLAYER_UPGRADE
;  		Armor           = AngmarDireWolfHeavyArmor
;  		DamageFX        = NormalDamageFX
;  	End
  
  
  	; This is required so that the build phase lasts as long as the anim.
  	BuildFadeInOnCreateTime = 0
  	
    	VisionRange 		= BFA_ISENGARD_WARGPACK_VISION_RANGE
    	ShroudClearingRange 	= BFA_ISENGARD_WARGPACK_SHROUD_RANGE
  	
  	VisionSide 		= 35%
  	VisionRear 		= 25%
  	
  	MaxVisionBonusPercent 	= 300%
  	VisionBonusTestRadius 	= 200
  	VisionBonusPercentPerFoot = 2.0%
  
  	BountyValue 		= BFA_ISENGARD_WARGPACK_BOUNTY_VALUE
  	DisplayName 		= OBJECT:KullHunter
  	CrushableLevel 		= 3  		; What am I?:        0 = for infantry, 1 = for trees, 2 = general vehicles
;  	CrusherLevel 		= 1 		; What can I crush?: 0 = small animals, 1 = infantry, 2 = trees, 3 = vehicles
  	
;  	CrushWeapon = WargCrush
;  
  	CommandSet = KullHunterCommandSet
   	CommandPoints = 6
  	
;  	MinCrushVelocityPercent = 50 ; Has to be moving at at least 50% of full speed.
;  	CrushDecelerationPercent =20 ; Lose 10 percent of max velocity when crushing.
;  	
;  	RamPower = 30;
;  	RamZMult = 0.5;
  
  
  	; ******************************************* AUDIO Parameters ***********************************;
  	VoiceSelect = NeutralWargVoxSelect
  	VoiceMove = NeutralWargVoxMove
  	VoiceAttack = NeutralWargVoxAttack
  ;	
  ;	
  	SoundAmbient				= WargAmbienceVOX
  	SoundImpact				= ImpactHorse
  	;SoundMoveLoop				= WargMoveFootsteps
  	;SoundCrushing				= WargRiderCrushing 		; Sound made when crushing another unit underhoof
  ;
  	;#include "..\includes\StandardUnitEvaEvents.inc"
  ;
  ;  	EvaEnemyObjectSightedEvent 		= WargRiderCreepSighted 	; Special event for wargs showing up. Helps distinguish the real enemies from random creeps
  ;	EvaEnemyObjectSightedAfterRespawnEvent 	= WargRiderCreepSighted 	; Event to run after the Cave Troll Lair is respawned. WARNING: This INI field only works for "SlavedUpdate.UseSlaverAsControlForEvaObjectSightedEvents = Yes" units
  ;	;EvaEventDieOwner			= GroupWargRiderDie		; Eva event to trigger on unit's death. NOTICE THAT this is only for permanent deaths
  ;										; For deaths you can respawn from, use the DeathFX
  ;
  	ClientBehavior = AnimationSoundClientBehavior ModuleTag_AnimAudioBehavior
  		MaxUpdateRangeCap = 800
  		AnimationSound = Sound:WargMoveFootsteps Animation:IUWarg_SKL.IUWarg_RUNA Frames:0
  		AnimationSound = Sound:WargMoveFootsteps Animation:IUWARG_SKL.IUWARG_TNL1 Frames:0
  		AnimationSound = Sound:WargMoveFootsteps Animation:IUWARG_SKL.IUWARG_TNR1 Frames:0
  		AnimationSound = Sound:WargMoveFootsteps Animation:IUWARG_SKL.IUWARG_TRNL Frames:0
  		AnimationSound = Sound:WargMoveFootsteps Animation:IUWARG_SKL.IUWARG_TRNR Frames:0
  		AnimationSound = Sound:WargMoveFootsteps Animation:IUWARG_SKL.IUWARG_ACCL Frames:0
  ;		AnimationSound = Sound:WargRiderTauntCallouts Animation:IUWarg_SKL.IUWarg_TNTA Frames:27
  		AnimationSound = Sound:WargTauntCallouts Animation:IUWarg_SKL.IUWarg_TNTA Frames:26 Animation:IUWarg_SKL.IUWarg_ATND Frames:7 Animation:IUWarg_SKL.IUWarg_HWLA Frames:17
  		AnimationSound = Sound:WargTauntFootstep Animation:IUWarg_SKL.IUWarg_TNTA Frames:7 12 64 73
  ;		;AnimationSound = Sound:WargSaddleFoleySingles Animation:IUWarg_SKL.IUWarg_TNTA Frames:25 Animation:IUWarg_SKL.IUWarg_RUNA Frames:5 Animation:IUWarg_SKL.IUWarg_TNL1 Frames:5 Animation:IUWarg_SKL.IUWarg_TNR1 Frames:5 Animation:IUWarg_SKL.IUWarg_ACCL Frames:5 Animation:IUWarg_SKL.IUWarg_ATNA Frames:5 Animation:IUWarg_SKL.IUWarg_ATND Frames:5 Animation:IUWarg_SKL.IUWarg_GTPA Frames:5 101 Animation:IUWarg_SKL.IUWarg_HWLA Frames:15 Animation:IUWarg_SKL.IUWarg_RDYA Frames:5 Animation:IUWarg_SKL.IUWarg_RDYB Frames:5
  	End
  ;
  ;	; Tie into LargeGroupAudio system
  	Behavior = LargeGroupAudioUpdate ModuleTag_LGAU
  		Key = Warg
  	End
  ;
  
  	; *** ENGINEERING Parameters ***
  
  	RadarPriority = UNIT
  	ThingClass = HORDE_UNIT
  
  	KindOf = PRELOAD SELECTABLE CAN_CAST_REFLECTIONS INFANTRY SCORE GRAB_AND_DROP
  	
  	Body = ActiveBody BodyModuleTag
  		CheerRadius 		= BFA_EMOTION_CHEER_RADIUS
  		MaxHealth		= BFA_ISENGARD_WARGPACK_HEALTH				;BALANCE Warg Health
  		MaxHealthDamaged	= BFA_ISENGARD_WARGPACK_HEALTH_DAMAGED		
  		BurningDeathBehavior 	= Yes
  		BurningDeathFX       	= FX_CavalryBurningFlame
  	End
  	
;  	Behavior = ArmorUpgrade ArmorUpgradeModuleTag
;  		TriggeredBy = Upgrade_AngmarSpikedCollar
;  		ArmorSetFlag		= PLAYER_UPGRADE
;  	End
  	  	
  	Behavior = AIUpdateInterface ModuleTag_03
  		AutoAcquireEnemiesWhenIdle = Yes ATTACK_BUILDINGS
  		AILuaEventsList		= WargRiderFunctions
  		BurningDeathTime	= BFA_BURNINGDEATH_DURATION_CAVALRY
  	End
  
  	LocomotorSet
  		Locomotor = NormalHorseHordeMemberLocomotor ;WargLocomotor
  		Condition = SET_NORMAL 
  		Speed     = BFA_NORMAL_MOUNTED_FAST_MEMBER_SPEED
  	End	
  
  	LocomotorSet
  		Locomotor = BurningDeathLocomotorCavalry
  		Condition = SET_BURNINGDEATH
  		Speed	  = BFA_BURNINGDEATH_WANDERSPEED_CAVALRY
  	End
  
  	Behavior = PhysicsBehavior ModuleTag_04
  		GravityMult 	  = 1.0
  		ShockStandingTime = 2533	;msec
  	End
  	
  	; IsengardWargRider
  	Behavior = HordeMemberCollide ModuleTag_HMC
  		;nothing
  	End
  	
  	Behavior = SquishCollide ModuleTag_06
  		;nothing
  	End
  
  	Behavior = SlowDeathBehavior ModuleTag_08
  		; Die and don't spawn horse
  		DeathTypes 	= ALL 
  		SinkDelay 	= 5000
  		SinkRate 	= 1.50     ; in Dist/Sec
  		DestructionDelay = 17000
  		Sound 		= INITIAL WargVoxDie
  	End
  	
	
  	Geometry 		= CYLINDER
  	GeometryMajorRadius 	= 16
  	GeometryMinorRadius 	= 16
  	GeometryHeight 		= 20.0
  	GeometryIsSmall 	= No
  
  	Shadow 		= SHADOW_DECAL
  	ShadowSizeX 	= 30;
  	ShadowSizeY 	= 20;
  	ShadowTexture 	= ShadowI;
  
End

//------------------------------------------------------------------------------
ChildObject SlavedUrgalDog UrgalDog
	IsTrainable = No
	CommandPoints = 0
	EquivalentTo = UrgalDog

	RadarPriority = UNIT
	
KindOf = PRELOAD CAN_CAST_REFLECTIONS INFANTRY SCORE GRAB_AND_DROP PATH_THROUGH_EACH_OTHER CAN_BE_REPULSED CREEP HAS_HEALTH_BAR


	CommandSet =  EmptyCommandSet
	 
	Body = ActiveBody ModuleTag_02
		CheerRadius 	  = BFA_EMOTION_CHEER_RADIUS
		MaxHealth         =  BFA_ISENGARD_WARGPACK_HEALTH ;BFA_GONDOR_TOWERGUARD_HEALTH             
		MaxHealthDamaged  = BFA_ISENGARD_WARGPACK_HEALTH_DAMAGED	
		BurningDeathBehavior = Yes
		BurningDeathFX       = FX_InfantryBurningFlame
	End

Behavior = SlavedUpdate ModuleTag_Slave
        LeashRange                    = 100
        GuardMaxRange                    = 10
        GuardWanderRange                = 10
        AttackRange                    = 100
        UseSlaverAsControlForEvaObjectSightedEvents    = No    // Not a creep        
        GuardPositionOffset                = X:0 Y:0 Z:0
;        FadeOutRange                    = 20
;        FadeTime                    = 1000    //in msec
        DieOnMastersDeath                = Yes    //Die when my master dies!
    End        

End

//------------------------------------------------------------------------------
ChildObject VardenWarDog_Slaved UrgalDog
	IsTrainable = No
	CommandPoints = 0
	EquivalentTo = UrgalDog

	RadarPriority = UNIT
	
KindOf = PRELOAD CAN_CAST_REFLECTIONS INFANTRY SCORE GRAB_AND_DROP PATH_THROUGH_EACH_OTHER CAN_BE_REPULSED CREEP HAS_HEALTH_BAR


	CommandSet =  EmptyCommandSet
	 
	Body = ActiveBody ModuleTag_02
		CheerRadius 	  = BFA_EMOTION_CHEER_RADIUS
		MaxHealth         =  BFA_ISENGARD_WARGPACK_HEALTH ;BFA_GONDOR_TOWERGUARD_HEALTH             
		MaxHealthDamaged  = BFA_ISENGARD_WARGPACK_HEALTH_DAMAGED	
		BurningDeathBehavior = Yes
		BurningDeathFX       = FX_InfantryBurningFlame
	End

	Behavior = SlavedUpdate ModuleTag_Slave
		LeashRange									= 300
		GuardMaxRange								= 0
		GuardWanderRange							= 10
		AttackRange									= 200
		UseSlaverAsControlForEvaObjectSightedEvents	= No	// Not a creep		
		GuardPositionOffset							= X:-15 Y:0 Z:0
		FadeOutRange								= 20
		FadeTime									= 1000	//in msec
		DieOnMastersDeath							= Yes	//Die when my master dies!
	End       

End
